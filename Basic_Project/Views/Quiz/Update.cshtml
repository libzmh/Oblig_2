@model Basic_Project.ViewModels.QuizCreateViewModel

@{
    ViewData["Title"] = "Update Quiz";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-md-8 mx-auto">
            <h2 class="mb-4">Update Quiz</h2>

            <form asp-action="Update" method="post" id="quizForm">
                <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                <!-- Quiz Information -->
                <div class="card mb-4">
                    <div class="card-header bg-warning text-dark">
                        <h5 class="mb-0">Quiz Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <label asp-for="Title" class="form-label">Quiz Title</label>
                            <input asp-for="Title" class="form-control" placeholder="Enter quiz title" />
                            <span asp-validation-for="Title" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Enter quiz description (optional)"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <!-- Questions Section -->
                <div class="card mb-4">
                    <div class="card-header bg-warning text-dark">
                        <h5 class="mb-0">Questions</h5>
                    </div>
                    <div class="card-body">
                        <div id="questionsContainer">
                            @for (int i = 0; i < Model.Questions.Count; i++)
                            {
                                <div class="question-item mb-4 p-3 border rounded" id="question-@i">
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <h6 class="mb-0 question-number">Question @(i + 1)</h6>
                                        <button type="button" class="btn btn-danger btn-sm" onclick="removeQuestion(@i)">
                                            Remove
                                        </button>
                                    </div>

                                    <div class="mb-3">
                                        <label class="form-label">Question Text</label>
                                        <input type="text" name="Questions[@i].QuestionText" value="@Model.Questions[i].QuestionText" class="form-control" required />
                                    </div>

                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <label class="form-label">Option A</label>
                                            <input type="text" name="Questions[@i].OptionA" value="@Model.Questions[i].OptionA" class="form-control" required />
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Option B</label>
                                            <input type="text" name="Questions[@i].OptionB" value="@Model.Questions[i].OptionB" class="form-control" required />
                                        </div>
                                    </div>

                                    <div class="row mb-3">
                                        <div class="col-md-6">
                                            <label class="form-label">Option C (Optional)</label>
                                            <input type="text" name="Questions[@i].OptionC" value="@Model.Questions[i].OptionC" class="form-control" />
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Option D (Optional)</label>
                                            <input type="text" name="Questions[@i].OptionD" value="@Model.Questions[i].OptionD" class="form-control" />
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <label class="form-label">Correct Answer</label>
                                            <select name="Questions[@i].CorrectAnswer" class="form-select" required>
                                                <option value="">Select correct answer</option>
                                                <option value="A" selected="@(Model.Questions[i].CorrectAnswer == "A")">A</option>
                                                <option value="B" selected="@(Model.Questions[i].CorrectAnswer == "B")">B</option>
                                                <option value="C" selected="@(Model.Questions[i].CorrectAnswer == "C")">C</option>
                                                <option value="D" selected="@(Model.Questions[i].CorrectAnswer == "D")">D</option>
                                            </select>
                                        </div>
                                        <div class="col-md-6">
                                            <label class="form-label">Points</label>
                                            <input type="number" name="Questions[@i].Points" value="@Model.Questions[i].Points" class="form-control" min="1" max="100" required />
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                        <div id="noQuestionsMessage" class="text-muted text-center py-4" style="display: none;">
                            No questions added yet. Click "Add Question" to start.
                        </div>
                        <div class="text-center mt-3">
                            <button type="button" class="btn btn-warning" onclick="addQuestion()">
                                <i class="bi bi-plus-circle"></i> Add Question
                            </button>
                        </div>
                    </div>
                </div>

                <!-- Form Actions -->
                <div class="d-flex gap-2 mb-5">
                    <button type="submit" class="btn btn-warning btn-lg">Update Quiz</button>
                    <a asp-action="Index" asp-controller="Home" class="btn btn-secondary btn-lg">Cancel</a>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    
    <script>
        let questionIndex = @Model.Questions.Count;

        function addQuestion() {
            const container = document.getElementById('questionsContainer');
            const noMessage = document.getElementById('noQuestionsMessage');
            
            if (noMessage) {
                noMessage.style.display = 'none';
            }

            const questionHtml = `
                <div class="question-item mb-4 p-3 border rounded" id="question-${questionIndex}">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h6 class="mb-0 question-number">Question ${getQuestionNumber()}</h6>
                        <button type="button" class="btn btn-danger btn-sm" onclick="removeQuestion(${questionIndex})">
                            Remove
                        </button>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Question Text</label>
                        <input type="text" name="Questions[${questionIndex}].QuestionText" class="form-control" required />
                        <span class="text-danger field-validation-valid" data-valmsg-for="Questions[${questionIndex}].QuestionText" data-valmsg-replace="true"></span>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Option A</label>
                            <input type="text" name="Questions[${questionIndex}].OptionA" class="form-control" required />
                            <span class="text-danger field-validation-valid" data-valmsg-for="Questions[${questionIndex}].OptionA" data-valmsg-replace="true"></span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Option B</label>
                            <input type="text" name="Questions[${questionIndex}].OptionB" class="form-control" required />
                            <span class="text-danger field-validation-valid" data-valmsg-for="Questions[${questionIndex}].OptionB" data-valmsg-replace="true"></span>
                        </div>
                    </div>

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <label class="form-label">Option C (Optional)</label>
                            <input type="text" name="Questions[${questionIndex}].OptionC" class="form-control" />
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Option D (Optional)</label>
                            <input type="text" name="Questions[${questionIndex}].OptionD" class="form-control" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-6">
                            <label class="form-label">Correct Answer</label>
                            <select name="Questions[${questionIndex}].CorrectAnswer" class="form-select" required>
                                <option value="">Select correct answer</option>
                                <option value="A">A</option>
                                <option value="B">B</option>
                                <option value="C">C</option>
                                <option value="D">D</option>
                            </select>
                            <span class="text-danger field-validation-valid" data-valmsg-for="Questions[${questionIndex}].CorrectAnswer" data-valmsg-replace="true"></span>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label">Points</label>
                            <input type="number" name="Questions[${questionIndex}].Points" class="form-control" value="1" min="1" max="100" required />
                        </div>
                    </div>
                </div>
            `;

            container.insertAdjacentHTML('beforeend', questionHtml);
            questionIndex++;

            // Re-initialize validation for new fields
            var form = $('#quizForm');
            form.removeData('validator');
            form.removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse(form);
        }

        function removeQuestion(index) {
            const questionElement = document.getElementById(`question-${index}`);
            if (questionElement) {
                questionElement.remove();
            }

            // Update question numbers
            updateQuestionNumbers();

            // Show "no questions" message if container is empty
            const container = document.getElementById('questionsContainer');
            const noMessage = document.getElementById('noQuestionsMessage');
            if (container.children.length === 0 && noMessage) {
                noMessage.style.display = 'block';
            }
        }

        function getQuestionNumber() {
            const container = document.getElementById('questionsContainer');
            return container.children.length + 1;
        }

        function updateQuestionNumbers() {
            const container = document.getElementById('questionsContainer');
            const questions = container.getElementsByClassName('question-item');
            
            Array.from(questions).forEach((question, index) => {
                const numberElement = question.querySelector('.question-number');
                if (numberElement) {
                    numberElement.textContent = `Question ${index + 1}`;
                }
            });
        }
    </script>
}